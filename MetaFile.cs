using System;
using System.Collections.Generic;

namespace FreneticMediaServer
{
    public class MetaFile
    {
        public MetaFile(string fileData)
        {
            bool timeSet = false;
            foreach (KeyValuePair<string, string> option in GeneralHelpers.ReadConfigData(fileData, (line) => throw new Exception("Invalid meta configuration line '" + line + "'")))
            {
                string value = option.Value;
                switch (option.Key)
                {
                    case "original_name":
                        OriginalName = GeneralHelpers.UnescapeFromConfig(value);
                        break;
                    case "time":
                        Time = DateTimeOffset.FromUnixTimeSeconds(long.Parse(value));
                        timeSet = true;
                        break;
                    case "uploader":
                        UploaderID = GeneralHelpers.UnescapeFromConfig(value);
                        break;
                    case "delete_code":
                        DeleteCode = GeneralHelpers.UnescapeFromConfig(value);
                        break;
                    case "description":
                        Description = GeneralHelpers.UnescapeFromConfig(value);
                        break;
                    default:
                        continue;
                }
            }
            if (Description == null)
            {
                throw new Exception("Meta file data does not contain a description value!");
            }
            if (UploaderID == null)
            {
                throw new Exception("Meta file data does not contain a uploader ID value!");
            }
            if (OriginalName == null)
            {
                throw new Exception("Meta file data does not contain an original name value!");
            }
            if (!timeSet)
            {
                throw new Exception("Meta file data does not contain an upload time value!");
            }
        }

        public MetaFile(string _uploaderID, string _description, string _originalname)
        {
            Time = DateTimeOffset.Now;
            UploaderID = _uploaderID;
            Description = _description;
            OriginalName = _originalname;
        }

        public void GenerateDeleteCode()
        {
            DeleteCode_Clean = GeneralHelpers.BytesToHex(SecurityHelper.GetRandomBytes(32));
            DeleteCode = SecurityHelper.HashCurrent(DeleteCode_Clean);
        }
        
        public DateTimeOffset Time;

        public string Description;

        public string UploaderID;

        public string DeleteCode;

        public string DeleteCode_Clean;

        public string OriginalName;

        public DateTimeOffset? DeleteTime;

        public string FileOutputString()
        {
            return "# Generated by FreneticMediaServer\noriginal_name=" + GeneralHelpers.EscapeForConfig(OriginalName)
                + "\ntime=" + Time.ToUnixTimeSeconds()
                + (DeleteTime.HasValue ? "\ndelete_time=" + DeleteTime.Value.ToUnixTimeSeconds() : "")
                + "\nuploader=" + GeneralHelpers.EscapeForConfig(UploaderID)
                + "\ndelete_code=" + DeleteCode
                + "\ndescription=" + GeneralHelpers.EscapeForConfig(Description)
                + "\n";
        }
    }
}
